name: Hackathon Image Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
       - name: Install doctl
         uses: digitalocean/action-doctl@v2
         with:
           token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
           
       # Create droplet and volumes
       - name: Generate SSH keypair for droplet access
         run: |
           ssh-keygen -t rsa -f ~/.ssh/droplet-${{ github.run_id }} -P ""
           echo "SSH_KEY=$(doctl compute ssh-key import droplet-${{ github.run_id }} --public-key-file ~/.ssh/droplet-${{ github.run_id }}.pub --format=ID --no-header=true --interactive=false)" >> $GITHUB_ENV
           
       - name: Create droplet for job
         run: |
           echo "DROPLET_ID=$(doctl compute droplet create sdvimagebuilddroplet-${{ github.run_id }} --region lon1 --image ubuntu-20-04-x64 --size s-4vcpu-8gb --ssh-keys $SSH_KEY --interactive=false --wait=true --format=ID --no-header=true)" >> $GITHUB_ENV
           
       - name: Create volume
         run: |
           echo "VOLUME_ID=$(doctl compute volume create buildvolumetmp-${{ github.run_id }} --region lon1 --size 150GiB --interactive=false --fs-type=ext4 --fs-label=bld --format=ID --no-header=true)" >> $GITHUB_ENV
           
       - name: Attach volume
         run: |
           doctl compute volume-action attach $VOLUME_ID $DROPLET_ID --interactive=false --wait=true
           
       # Run commands on droplet
       - name: Run commands on droplet
         run: |
           until ssh-keyscan `doctl compute droplet get $DROPLET_ID --format=PublicIPv4 --no-header=true --interactive=false` >> ~/.ssh/known_hosts; do
             echo 'Waiting for host to come online...'
             sleep 5
           done
           ssh -i ~/.ssh/droplet-${{ github.run_id }} root@`doctl compute droplet get $DROPLET_ID --format=PublicIPv4 --no-header=true --interactive=false` " \
             apt-get update ; \
             sleep 5 ; \
             apt-get install -y build-essential python3-pip python3 chrpath diffstat zstd git ; \
             pip install kas ; \
             cd /mnt/buildvolumetmp_${{ github.run_id }} ; \
             git clone https://github.com/benmordaunt/sdv-hackathon-cfg3.git -b main ; \
             cd sdv-hackathon-cfg3 ; \
             kas build meta-ewaol-hackathon/kas/machine/rpi4-hkt.yml \
           "
       
       # Teardown droplet and volumes
       - name: Detach volume from droplet
         if: always()
         run: |
           doctl compute volume-action detach $VOLUME_ID $DROPLET_ID --interactive=false --wait=true
       
       - name: Delete volume
         if: always()
         run: |
           doctl compute volume delete $VOLUME_ID --interactive=false --force
           
       - name: Delete droplet
         if: always()
         run: |
           doctl compute droplet delete $DROPLET_ID --interactive=false --force
           
